#Reading data
df <- read.csv("C:/Users/Swapnil Kumar Vaish/Documents/R/TheSparksFoundation_Internship/Prediction Using Supervised ML/data.csv")
View(df)
head(df,10)
head(df,10)
library(ggplot2)
ggplot(data = df, aes(x=Hours, y = Scores)) + geom_point(fill="red")
library(ggplot2)
ggplot(data = df, aes(x=Hours, y = Scores)) + geom_point(colour = "red") +  ggtitle(" Hours vs  Score ") + xlab("Hours of study") + ylab("Scores")
library(ggplot2)
ggplot(data = df, aes(x=Hours, y = Scores)) + geom_point(colour = "red", Scores ~ Hours) +  ggtitle(" Hours vs  Score ") + xlab("Hours of study") + ylab("Scores")
library(ggplot2)
ggplot(data = df, aes(x=Hours, y = Scores)) + geom_point(colour = "red") +  ggtitle(" Hours vs  Score ") + xlab("Hours of study") + ylab("Scores")
train <- sample(1:nrow(df), 0.8 * nrow(df))
train <- sample(1:nrow(df), 0.8 * nrow(df))
test <- setdiff(1:nrow(df, train))
train <- sample(1:nrow(df), 0.8 * nrow(df))
test <- setdiff(1:nrow(df), train)
train <- sample(1:nrow(df), 0.66 * nrow(df))
test <- setdiff(1:nrow(df), train)
##Build X_train, y_train, X_test, y_test
#X_train <- df[train,]
##Build X_train, y_train, X_test, y_test
X_train <- df[train, -8]
View(X_train)
##Build X_train, y_train, X_test, y_test
X_train <- df[train, -1]
train <- sample(1:nrow(df), 0.66 * nrow(df))
test <- setdiff(1:nrow(df), train)
##Build X_train, y_train, X_test, y_test
X_train <- df[train, -1]
y_train <- df[train, "Scores"]
X_test <- df[test, -1]
y_test <- df[test, "Scores"]
model_lm <- lm(X_train ~ y_train)
View(model_lm)
model_lm <- lm(X_train ~ y_train)
#plotting the regression line
summary(model_lm)
plot(model_lm)
plot(X_test, y_test)
abline(model_lm)
## Plotting for the test data
plot(X_test, y_test)
abline(model_lm)
## Plotting for the test data
plot(X_test, y_test, colour = "red") + xlab("Hours") + ylab("Scores")
## Plotting for the test data
plot(X_test, y_test) + xlab("Hours") + ylab("Scores")
scatter.smooth(X_test,y_test, model_lm)
scatter.smooth(X_test,y_test, colour = "red")
scatter.smooth(X_test,y_test, color = "red")
scatter.smooth(X_test,y_test, lpars = list(col="Red"))
X_test
train <- sample(1:nrow(df), 0.66 * nrow(df))
test <- setdiff(1:nrow(df), train)
##Build X_train, y_train, X_test, y_test
X_train <- df[train, 1]
y_train <- df[train, "Scores"]
X_test <- df[test, 1]
y_test <- df[test, "Scores"]
model_lm <- lm(X_train ~ y_train)
#plotting the regression line
summary(model_lm)
plot(model_lm)
## Plotting for the test data
scatter.smooth(X_test,y_test, lpars = list(col="Red"))
X_test
pred <- predict(lm(X_test))
pred <- predict(model_lm, X_test)
pred <- predict(model_lm, new.X_test)
pred <- predict(model_lm, X_test)
X_test
pred <- predict(model_lm, data.frame(X_test))
pred
##ACtual vs predicted
df1 <- data.frame("ACtual" = y_test, "Predicted" = pred)
X_test
pred <- predict(model_lm, data.frame(X_test))
pred
df <- read.csv("C:/Users/Swapnil Kumar Vaish/Documents/R/TheSparksFoundation_Internship/Prediction Using Supervised ML/data.csv")
head(df,10)
